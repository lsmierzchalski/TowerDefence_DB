#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TowerDefenceEF.SQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TowerDefence_Test")]
	public partial class TowerDefenceDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBudynek(Budynek instance);
    partial void UpdateBudynek(Budynek instance);
    partial void DeleteBudynek(Budynek instance);
    partial void InsertZbudowany_Z(Zbudowany_Z instance);
    partial void UpdateZbudowany_Z(Zbudowany_Z instance);
    partial void DeleteZbudowany_Z(Zbudowany_Z instance);
    partial void InsertFala(Fala instance);
    partial void UpdateFala(Fala instance);
    partial void DeleteFala(Fala instance);
    partial void InsertLog_Budynku(Log_Budynku instance);
    partial void UpdateLog_Budynku(Log_Budynku instance);
    partial void DeleteLog_Budynku(Log_Budynku instance);
    partial void InsertLog_Surowca(Log_Surowca instance);
    partial void UpdateLog_Surowca(Log_Surowca instance);
    partial void DeleteLog_Surowca(Log_Surowca instance);
    partial void InsertSklad_Fali(Sklad_Fali instance);
    partial void UpdateSklad_Fali(Sklad_Fali instance);
    partial void DeleteSklad_Fali(Sklad_Fali instance);
    partial void InsertSurowiec(Surowiec instance);
    partial void UpdateSurowiec(Surowiec instance);
    partial void DeleteSurowiec(Surowiec instance);
    partial void InsertTyp_Budynku(Typ_Budynku instance);
    partial void UpdateTyp_Budynku(Typ_Budynku instance);
    partial void DeleteTyp_Budynku(Typ_Budynku instance);
    partial void InsertTyp_Przeciwnika(Typ_Przeciwnika instance);
    partial void UpdateTyp_Przeciwnika(Typ_Przeciwnika instance);
    partial void DeleteTyp_Przeciwnika(Typ_Przeciwnika instance);
    #endregion
		
		public TowerDefenceDataContext() : 
				base(global::TowerDefenceEF.Properties.Settings.Default.TowerDefence_TestConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TowerDefenceDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TowerDefenceDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TowerDefenceDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TowerDefenceDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Budynek> Budyneks
		{
			get
			{
				return this.GetTable<Budynek>();
			}
		}
		
		public System.Data.Linq.Table<Zbudowany_Z> Zbudowany_Zs
		{
			get
			{
				return this.GetTable<Zbudowany_Z>();
			}
		}
		
		public System.Data.Linq.Table<Fala> Falas
		{
			get
			{
				return this.GetTable<Fala>();
			}
		}
		
		public System.Data.Linq.Table<Log_Budynku> Log_Budynkus
		{
			get
			{
				return this.GetTable<Log_Budynku>();
			}
		}
		
		public System.Data.Linq.Table<Log_Surowca> Log_Surowcas
		{
			get
			{
				return this.GetTable<Log_Surowca>();
			}
		}
		
		public System.Data.Linq.Table<Sklad_Fali> Sklad_Falis
		{
			get
			{
				return this.GetTable<Sklad_Fali>();
			}
		}
		
		public System.Data.Linq.Table<Surowiec> Surowiecs
		{
			get
			{
				return this.GetTable<Surowiec>();
			}
		}
		
		public System.Data.Linq.Table<Typ_Budynku> Typ_Budynkus
		{
			get
			{
				return this.GetTable<Typ_Budynku>();
			}
		}
		
		public System.Data.Linq.Table<Typ_Przeciwnika> Typ_Przeciwnikas
		{
			get
			{
				return this.GetTable<Typ_Przeciwnika>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Budynek")]
	public partial class Budynek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdBudynku;
		
		private int _IdTypuBudynku;
		
		private int _PoziomRozwoju;
		
		private int _PozycjaNaMapieX;
		
		private int _PozycjaNaMapieY;
		
		private EntitySet<Log_Budynku> _Log_Budynkus;
		
		private EntityRef<Typ_Budynku> _Typ_Budynku;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdBudynkuChanging(int value);
    partial void OnIdBudynkuChanged();
    partial void OnIdTypuBudynkuChanging(int value);
    partial void OnIdTypuBudynkuChanged();
    partial void OnPoziomRozwojuChanging(int value);
    partial void OnPoziomRozwojuChanged();
    partial void OnPozycjaNaMapieXChanging(int value);
    partial void OnPozycjaNaMapieXChanged();
    partial void OnPozycjaNaMapieYChanging(int value);
    partial void OnPozycjaNaMapieYChanged();
    #endregion
		
		public Budynek()
		{
			this._Log_Budynkus = new EntitySet<Log_Budynku>(new Action<Log_Budynku>(this.attach_Log_Budynkus), new Action<Log_Budynku>(this.detach_Log_Budynkus));
			this._Typ_Budynku = default(EntityRef<Typ_Budynku>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBudynku", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdBudynku
		{
			get
			{
				return this._IdBudynku;
			}
			set
			{
				if ((this._IdBudynku != value))
				{
					this.OnIdBudynkuChanging(value);
					this.SendPropertyChanging();
					this._IdBudynku = value;
					this.SendPropertyChanged("IdBudynku");
					this.OnIdBudynkuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypuBudynku", DbType="Int NOT NULL")]
		public int IdTypuBudynku
		{
			get
			{
				return this._IdTypuBudynku;
			}
			set
			{
				if ((this._IdTypuBudynku != value))
				{
					if (this._Typ_Budynku.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypuBudynkuChanging(value);
					this.SendPropertyChanging();
					this._IdTypuBudynku = value;
					this.SendPropertyChanged("IdTypuBudynku");
					this.OnIdTypuBudynkuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoziomRozwoju", DbType="Int NOT NULL")]
		public int PoziomRozwoju
		{
			get
			{
				return this._PoziomRozwoju;
			}
			set
			{
				if ((this._PoziomRozwoju != value))
				{
					this.OnPoziomRozwojuChanging(value);
					this.SendPropertyChanging();
					this._PoziomRozwoju = value;
					this.SendPropertyChanged("PoziomRozwoju");
					this.OnPoziomRozwojuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PozycjaNaMapieX", DbType="Int NOT NULL")]
		public int PozycjaNaMapieX
		{
			get
			{
				return this._PozycjaNaMapieX;
			}
			set
			{
				if ((this._PozycjaNaMapieX != value))
				{
					this.OnPozycjaNaMapieXChanging(value);
					this.SendPropertyChanging();
					this._PozycjaNaMapieX = value;
					this.SendPropertyChanged("PozycjaNaMapieX");
					this.OnPozycjaNaMapieXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PozycjaNaMapieY", DbType="Int NOT NULL")]
		public int PozycjaNaMapieY
		{
			get
			{
				return this._PozycjaNaMapieY;
			}
			set
			{
				if ((this._PozycjaNaMapieY != value))
				{
					this.OnPozycjaNaMapieYChanging(value);
					this.SendPropertyChanging();
					this._PozycjaNaMapieY = value;
					this.SendPropertyChanged("PozycjaNaMapieY");
					this.OnPozycjaNaMapieYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budynek_Log_Budynku", Storage="_Log_Budynkus", ThisKey="IdBudynku", OtherKey="IdBudynku")]
		public EntitySet<Log_Budynku> Log_Budynkus
		{
			get
			{
				return this._Log_Budynkus;
			}
			set
			{
				this._Log_Budynkus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typ_Budynku_Budynek", Storage="_Typ_Budynku", ThisKey="IdTypuBudynku", OtherKey="IdTypuBudynku", IsForeignKey=true)]
		public Typ_Budynku Typ_Budynku
		{
			get
			{
				return this._Typ_Budynku.Entity;
			}
			set
			{
				Typ_Budynku previousValue = this._Typ_Budynku.Entity;
				if (((previousValue != value) 
							|| (this._Typ_Budynku.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Typ_Budynku.Entity = null;
						previousValue.Budyneks.Remove(this);
					}
					this._Typ_Budynku.Entity = value;
					if ((value != null))
					{
						value.Budyneks.Add(this);
						this._IdTypuBudynku = value.IdTypuBudynku;
					}
					else
					{
						this._IdTypuBudynku = default(int);
					}
					this.SendPropertyChanged("Typ_Budynku");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Log_Budynkus(Log_Budynku entity)
		{
			this.SendPropertyChanging();
			entity.Budynek = this;
		}
		
		private void detach_Log_Budynkus(Log_Budynku entity)
		{
			this.SendPropertyChanging();
			entity.Budynek = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Zbudowany Z]")]
	public partial class Zbudowany_Z : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdZbudowanyZ;
		
		private int _IdTypuBudynku;
		
		private int _IdTypuSurowca;
		
		private int _Ilosc;
		
		private EntityRef<Surowiec> _Surowiec;
		
		private EntityRef<Typ_Budynku> _Typ_Budynku;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdZbudowanyZChanging(int value);
    partial void OnIdZbudowanyZChanged();
    partial void OnIdTypuBudynkuChanging(int value);
    partial void OnIdTypuBudynkuChanged();
    partial void OnIdTypuSurowcaChanging(int value);
    partial void OnIdTypuSurowcaChanged();
    partial void OnIloscChanging(int value);
    partial void OnIloscChanged();
    #endregion
		
		public Zbudowany_Z()
		{
			this._Surowiec = default(EntityRef<Surowiec>);
			this._Typ_Budynku = default(EntityRef<Typ_Budynku>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdZbudowanyZ", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdZbudowanyZ
		{
			get
			{
				return this._IdZbudowanyZ;
			}
			set
			{
				if ((this._IdZbudowanyZ != value))
				{
					this.OnIdZbudowanyZChanging(value);
					this.SendPropertyChanging();
					this._IdZbudowanyZ = value;
					this.SendPropertyChanged("IdZbudowanyZ");
					this.OnIdZbudowanyZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypuBudynku", DbType="Int NOT NULL")]
		public int IdTypuBudynku
		{
			get
			{
				return this._IdTypuBudynku;
			}
			set
			{
				if ((this._IdTypuBudynku != value))
				{
					if (this._Typ_Budynku.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypuBudynkuChanging(value);
					this.SendPropertyChanging();
					this._IdTypuBudynku = value;
					this.SendPropertyChanged("IdTypuBudynku");
					this.OnIdTypuBudynkuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypuSurowca", DbType="Int NOT NULL")]
		public int IdTypuSurowca
		{
			get
			{
				return this._IdTypuSurowca;
			}
			set
			{
				if ((this._IdTypuSurowca != value))
				{
					if (this._Surowiec.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypuSurowcaChanging(value);
					this.SendPropertyChanging();
					this._IdTypuSurowca = value;
					this.SendPropertyChanged("IdTypuSurowca");
					this.OnIdTypuSurowcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Surowiec_Zbudowany_Z", Storage="_Surowiec", ThisKey="IdTypuSurowca", OtherKey="IdSurowca", IsForeignKey=true)]
		public Surowiec Surowiec
		{
			get
			{
				return this._Surowiec.Entity;
			}
			set
			{
				Surowiec previousValue = this._Surowiec.Entity;
				if (((previousValue != value) 
							|| (this._Surowiec.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Surowiec.Entity = null;
						previousValue.Zbudowany_Zs.Remove(this);
					}
					this._Surowiec.Entity = value;
					if ((value != null))
					{
						value.Zbudowany_Zs.Add(this);
						this._IdTypuSurowca = value.IdSurowca;
					}
					else
					{
						this._IdTypuSurowca = default(int);
					}
					this.SendPropertyChanged("Surowiec");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typ_Budynku_Zbudowany_Z", Storage="_Typ_Budynku", ThisKey="IdTypuBudynku", OtherKey="IdTypuBudynku", IsForeignKey=true)]
		public Typ_Budynku Typ_Budynku
		{
			get
			{
				return this._Typ_Budynku.Entity;
			}
			set
			{
				Typ_Budynku previousValue = this._Typ_Budynku.Entity;
				if (((previousValue != value) 
							|| (this._Typ_Budynku.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Typ_Budynku.Entity = null;
						previousValue.Zbudowany_Zs.Remove(this);
					}
					this._Typ_Budynku.Entity = value;
					if ((value != null))
					{
						value.Zbudowany_Zs.Add(this);
						this._IdTypuBudynku = value.IdTypuBudynku;
					}
					else
					{
						this._IdTypuBudynku = default(int);
					}
					this.SendPropertyChanged("Typ_Budynku");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Fala")]
	public partial class Fala : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdFali;
		
		private string _Nazwa;
		
		private int _NumerFali;
		
		private EntitySet<Log_Budynku> _Log_Budynkus;
		
		private EntitySet<Log_Surowca> _Log_Surowcas;
		
		private EntitySet<Sklad_Fali> _Sklad_Falis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdFaliChanging(int value);
    partial void OnIdFaliChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnNumerFaliChanging(int value);
    partial void OnNumerFaliChanged();
    #endregion
		
		public Fala()
		{
			this._Log_Budynkus = new EntitySet<Log_Budynku>(new Action<Log_Budynku>(this.attach_Log_Budynkus), new Action<Log_Budynku>(this.detach_Log_Budynkus));
			this._Log_Surowcas = new EntitySet<Log_Surowca>(new Action<Log_Surowca>(this.attach_Log_Surowcas), new Action<Log_Surowca>(this.detach_Log_Surowcas));
			this._Sklad_Falis = new EntitySet<Sklad_Fali>(new Action<Sklad_Fali>(this.attach_Sklad_Falis), new Action<Sklad_Fali>(this.detach_Sklad_Falis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFali", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdFali
		{
			get
			{
				return this._IdFali;
			}
			set
			{
				if ((this._IdFali != value))
				{
					this.OnIdFaliChanging(value);
					this.SendPropertyChanging();
					this._IdFali = value;
					this.SendPropertyChanged("IdFali");
					this.OnIdFaliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumerFali", DbType="Int NOT NULL")]
		public int NumerFali
		{
			get
			{
				return this._NumerFali;
			}
			set
			{
				if ((this._NumerFali != value))
				{
					this.OnNumerFaliChanging(value);
					this.SendPropertyChanging();
					this._NumerFali = value;
					this.SendPropertyChanged("NumerFali");
					this.OnNumerFaliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fala_Log_Budynku", Storage="_Log_Budynkus", ThisKey="IdFali", OtherKey="IdFali")]
		public EntitySet<Log_Budynku> Log_Budynkus
		{
			get
			{
				return this._Log_Budynkus;
			}
			set
			{
				this._Log_Budynkus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fala_Log_Surowca", Storage="_Log_Surowcas", ThisKey="IdFali", OtherKey="IdFali")]
		public EntitySet<Log_Surowca> Log_Surowcas
		{
			get
			{
				return this._Log_Surowcas;
			}
			set
			{
				this._Log_Surowcas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fala_Sklad_Fali", Storage="_Sklad_Falis", ThisKey="IdFali", OtherKey="IdFali")]
		public EntitySet<Sklad_Fali> Sklad_Falis
		{
			get
			{
				return this._Sklad_Falis;
			}
			set
			{
				this._Sklad_Falis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Log_Budynkus(Log_Budynku entity)
		{
			this.SendPropertyChanging();
			entity.Fala = this;
		}
		
		private void detach_Log_Budynkus(Log_Budynku entity)
		{
			this.SendPropertyChanging();
			entity.Fala = null;
		}
		
		private void attach_Log_Surowcas(Log_Surowca entity)
		{
			this.SendPropertyChanging();
			entity.Fala = this;
		}
		
		private void detach_Log_Surowcas(Log_Surowca entity)
		{
			this.SendPropertyChanging();
			entity.Fala = null;
		}
		
		private void attach_Sklad_Falis(Sklad_Fali entity)
		{
			this.SendPropertyChanging();
			entity.Fala = this;
		}
		
		private void detach_Sklad_Falis(Sklad_Fali entity)
		{
			this.SendPropertyChanging();
			entity.Fala = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log Budynku]")]
	public partial class Log_Budynku : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLoguBudynku;
		
		private int _IdFali;
		
		private int _IdBudynku;
		
		private int _PoziomRozwoju;
		
		private EntityRef<Fala> _Fala;
		
		private EntityRef<Budynek> _Budynek;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLoguBudynkuChanging(int value);
    partial void OnIdLoguBudynkuChanged();
    partial void OnIdFaliChanging(int value);
    partial void OnIdFaliChanged();
    partial void OnIdBudynkuChanging(int value);
    partial void OnIdBudynkuChanged();
    partial void OnPoziomRozwojuChanging(int value);
    partial void OnPoziomRozwojuChanged();
    #endregion
		
		public Log_Budynku()
		{
			this._Fala = default(EntityRef<Fala>);
			this._Budynek = default(EntityRef<Budynek>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLoguBudynku", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdLoguBudynku
		{
			get
			{
				return this._IdLoguBudynku;
			}
			set
			{
				if ((this._IdLoguBudynku != value))
				{
					this.OnIdLoguBudynkuChanging(value);
					this.SendPropertyChanging();
					this._IdLoguBudynku = value;
					this.SendPropertyChanged("IdLoguBudynku");
					this.OnIdLoguBudynkuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFali", DbType="Int NOT NULL")]
		public int IdFali
		{
			get
			{
				return this._IdFali;
			}
			set
			{
				if ((this._IdFali != value))
				{
					if (this._Fala.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFaliChanging(value);
					this.SendPropertyChanging();
					this._IdFali = value;
					this.SendPropertyChanged("IdFali");
					this.OnIdFaliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdBudynku", DbType="Int NOT NULL")]
		public int IdBudynku
		{
			get
			{
				return this._IdBudynku;
			}
			set
			{
				if ((this._IdBudynku != value))
				{
					if (this._Budynek.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdBudynkuChanging(value);
					this.SendPropertyChanging();
					this._IdBudynku = value;
					this.SendPropertyChanged("IdBudynku");
					this.OnIdBudynkuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoziomRozwoju", DbType="Int NOT NULL")]
		public int PoziomRozwoju
		{
			get
			{
				return this._PoziomRozwoju;
			}
			set
			{
				if ((this._PoziomRozwoju != value))
				{
					this.OnPoziomRozwojuChanging(value);
					this.SendPropertyChanging();
					this._PoziomRozwoju = value;
					this.SendPropertyChanged("PoziomRozwoju");
					this.OnPoziomRozwojuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fala_Log_Budynku", Storage="_Fala", ThisKey="IdFali", OtherKey="IdFali", IsForeignKey=true)]
		public Fala Fala
		{
			get
			{
				return this._Fala.Entity;
			}
			set
			{
				Fala previousValue = this._Fala.Entity;
				if (((previousValue != value) 
							|| (this._Fala.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fala.Entity = null;
						previousValue.Log_Budynkus.Remove(this);
					}
					this._Fala.Entity = value;
					if ((value != null))
					{
						value.Log_Budynkus.Add(this);
						this._IdFali = value.IdFali;
					}
					else
					{
						this._IdFali = default(int);
					}
					this.SendPropertyChanged("Fala");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Budynek_Log_Budynku", Storage="_Budynek", ThisKey="IdBudynku", OtherKey="IdBudynku", IsForeignKey=true)]
		public Budynek Budynek
		{
			get
			{
				return this._Budynek.Entity;
			}
			set
			{
				Budynek previousValue = this._Budynek.Entity;
				if (((previousValue != value) 
							|| (this._Budynek.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Budynek.Entity = null;
						previousValue.Log_Budynkus.Remove(this);
					}
					this._Budynek.Entity = value;
					if ((value != null))
					{
						value.Log_Budynkus.Add(this);
						this._IdBudynku = value.IdBudynku;
					}
					else
					{
						this._IdBudynku = default(int);
					}
					this.SendPropertyChanged("Budynek");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Log Surowca]")]
	public partial class Log_Surowca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdLoguSurowca;
		
		private int _IdTypuSurowca;
		
		private int _Ilosc;
		
		private int _IdFali;
		
		private EntityRef<Fala> _Fala;
		
		private EntityRef<Surowiec> _Surowiec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdLoguSurowcaChanging(int value);
    partial void OnIdLoguSurowcaChanged();
    partial void OnIdTypuSurowcaChanging(int value);
    partial void OnIdTypuSurowcaChanged();
    partial void OnIloscChanging(int value);
    partial void OnIloscChanged();
    partial void OnIdFaliChanging(int value);
    partial void OnIdFaliChanged();
    #endregion
		
		public Log_Surowca()
		{
			this._Fala = default(EntityRef<Fala>);
			this._Surowiec = default(EntityRef<Surowiec>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdLoguSurowca", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdLoguSurowca
		{
			get
			{
				return this._IdLoguSurowca;
			}
			set
			{
				if ((this._IdLoguSurowca != value))
				{
					this.OnIdLoguSurowcaChanging(value);
					this.SendPropertyChanging();
					this._IdLoguSurowca = value;
					this.SendPropertyChanged("IdLoguSurowca");
					this.OnIdLoguSurowcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypuSurowca", DbType="Int NOT NULL")]
		public int IdTypuSurowca
		{
			get
			{
				return this._IdTypuSurowca;
			}
			set
			{
				if ((this._IdTypuSurowca != value))
				{
					if (this._Surowiec.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypuSurowcaChanging(value);
					this.SendPropertyChanging();
					this._IdTypuSurowca = value;
					this.SendPropertyChanged("IdTypuSurowca");
					this.OnIdTypuSurowcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFali", DbType="Int NOT NULL")]
		public int IdFali
		{
			get
			{
				return this._IdFali;
			}
			set
			{
				if ((this._IdFali != value))
				{
					if (this._Fala.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFaliChanging(value);
					this.SendPropertyChanging();
					this._IdFali = value;
					this.SendPropertyChanged("IdFali");
					this.OnIdFaliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fala_Log_Surowca", Storage="_Fala", ThisKey="IdFali", OtherKey="IdFali", IsForeignKey=true)]
		public Fala Fala
		{
			get
			{
				return this._Fala.Entity;
			}
			set
			{
				Fala previousValue = this._Fala.Entity;
				if (((previousValue != value) 
							|| (this._Fala.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fala.Entity = null;
						previousValue.Log_Surowcas.Remove(this);
					}
					this._Fala.Entity = value;
					if ((value != null))
					{
						value.Log_Surowcas.Add(this);
						this._IdFali = value.IdFali;
					}
					else
					{
						this._IdFali = default(int);
					}
					this.SendPropertyChanged("Fala");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Surowiec_Log_Surowca", Storage="_Surowiec", ThisKey="IdTypuSurowca", OtherKey="IdSurowca", IsForeignKey=true)]
		public Surowiec Surowiec
		{
			get
			{
				return this._Surowiec.Entity;
			}
			set
			{
				Surowiec previousValue = this._Surowiec.Entity;
				if (((previousValue != value) 
							|| (this._Surowiec.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Surowiec.Entity = null;
						previousValue.Log_Surowcas.Remove(this);
					}
					this._Surowiec.Entity = value;
					if ((value != null))
					{
						value.Log_Surowcas.Add(this);
						this._IdTypuSurowca = value.IdSurowca;
					}
					else
					{
						this._IdTypuSurowca = default(int);
					}
					this.SendPropertyChanged("Surowiec");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Sklad Fali]")]
	public partial class Sklad_Fali : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSkladuFali;
		
		private int _IdFali;
		
		private int _IdTypuPrzeciwnika;
		
		private int _Ilosc;
		
		private EntityRef<Fala> _Fala;
		
		private EntityRef<Typ_Przeciwnika> _Typ_Przeciwnika;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSkladuFaliChanging(int value);
    partial void OnIdSkladuFaliChanged();
    partial void OnIdFaliChanging(int value);
    partial void OnIdFaliChanged();
    partial void OnIdTypuPrzeciwnikaChanging(int value);
    partial void OnIdTypuPrzeciwnikaChanged();
    partial void OnIloscChanging(int value);
    partial void OnIloscChanged();
    #endregion
		
		public Sklad_Fali()
		{
			this._Fala = default(EntityRef<Fala>);
			this._Typ_Przeciwnika = default(EntityRef<Typ_Przeciwnika>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSkladuFali", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSkladuFali
		{
			get
			{
				return this._IdSkladuFali;
			}
			set
			{
				if ((this._IdSkladuFali != value))
				{
					this.OnIdSkladuFaliChanging(value);
					this.SendPropertyChanging();
					this._IdSkladuFali = value;
					this.SendPropertyChanged("IdSkladuFali");
					this.OnIdSkladuFaliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdFali", DbType="Int NOT NULL")]
		public int IdFali
		{
			get
			{
				return this._IdFali;
			}
			set
			{
				if ((this._IdFali != value))
				{
					if (this._Fala.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdFaliChanging(value);
					this.SendPropertyChanging();
					this._IdFali = value;
					this.SendPropertyChanged("IdFali");
					this.OnIdFaliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypuPrzeciwnika", DbType="Int NOT NULL")]
		public int IdTypuPrzeciwnika
		{
			get
			{
				return this._IdTypuPrzeciwnika;
			}
			set
			{
				if ((this._IdTypuPrzeciwnika != value))
				{
					if (this._Typ_Przeciwnika.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdTypuPrzeciwnikaChanging(value);
					this.SendPropertyChanging();
					this._IdTypuPrzeciwnika = value;
					this.SendPropertyChanged("IdTypuPrzeciwnika");
					this.OnIdTypuPrzeciwnikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int NOT NULL")]
		public int Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Fala_Sklad_Fali", Storage="_Fala", ThisKey="IdFali", OtherKey="IdFali", IsForeignKey=true)]
		public Fala Fala
		{
			get
			{
				return this._Fala.Entity;
			}
			set
			{
				Fala previousValue = this._Fala.Entity;
				if (((previousValue != value) 
							|| (this._Fala.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Fala.Entity = null;
						previousValue.Sklad_Falis.Remove(this);
					}
					this._Fala.Entity = value;
					if ((value != null))
					{
						value.Sklad_Falis.Add(this);
						this._IdFali = value.IdFali;
					}
					else
					{
						this._IdFali = default(int);
					}
					this.SendPropertyChanged("Fala");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typ_Przeciwnika_Sklad_Fali", Storage="_Typ_Przeciwnika", ThisKey="IdTypuPrzeciwnika", OtherKey="IdTypuPrzeciwnika", IsForeignKey=true)]
		public Typ_Przeciwnika Typ_Przeciwnika
		{
			get
			{
				return this._Typ_Przeciwnika.Entity;
			}
			set
			{
				Typ_Przeciwnika previousValue = this._Typ_Przeciwnika.Entity;
				if (((previousValue != value) 
							|| (this._Typ_Przeciwnika.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Typ_Przeciwnika.Entity = null;
						previousValue.Sklad_Falis.Remove(this);
					}
					this._Typ_Przeciwnika.Entity = value;
					if ((value != null))
					{
						value.Sklad_Falis.Add(this);
						this._IdTypuPrzeciwnika = value.IdTypuPrzeciwnika;
					}
					else
					{
						this._IdTypuPrzeciwnika = default(int);
					}
					this.SendPropertyChanged("Typ_Przeciwnika");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Surowiec")]
	public partial class Surowiec : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSurowca;
		
		private string _Nazwa;
		
		private System.Nullable<int> _Ilosc;
		
		private EntitySet<Zbudowany_Z> _Zbudowany_Zs;
		
		private EntitySet<Log_Surowca> _Log_Surowcas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSurowcaChanging(int value);
    partial void OnIdSurowcaChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnIloscChanging(System.Nullable<int> value);
    partial void OnIloscChanged();
    #endregion
		
		public Surowiec()
		{
			this._Zbudowany_Zs = new EntitySet<Zbudowany_Z>(new Action<Zbudowany_Z>(this.attach_Zbudowany_Zs), new Action<Zbudowany_Z>(this.detach_Zbudowany_Zs));
			this._Log_Surowcas = new EntitySet<Log_Surowca>(new Action<Log_Surowca>(this.attach_Log_Surowcas), new Action<Log_Surowca>(this.detach_Log_Surowcas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSurowca", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSurowca
		{
			get
			{
				return this._IdSurowca;
			}
			set
			{
				if ((this._IdSurowca != value))
				{
					this.OnIdSurowcaChanging(value);
					this.SendPropertyChanging();
					this._IdSurowca = value;
					this.SendPropertyChanged("IdSurowca");
					this.OnIdSurowcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(255)")]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ilosc", DbType="Int")]
		public System.Nullable<int> Ilosc
		{
			get
			{
				return this._Ilosc;
			}
			set
			{
				if ((this._Ilosc != value))
				{
					this.OnIloscChanging(value);
					this.SendPropertyChanging();
					this._Ilosc = value;
					this.SendPropertyChanged("Ilosc");
					this.OnIloscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Surowiec_Zbudowany_Z", Storage="_Zbudowany_Zs", ThisKey="IdSurowca", OtherKey="IdTypuSurowca")]
		public EntitySet<Zbudowany_Z> Zbudowany_Zs
		{
			get
			{
				return this._Zbudowany_Zs;
			}
			set
			{
				this._Zbudowany_Zs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Surowiec_Log_Surowca", Storage="_Log_Surowcas", ThisKey="IdSurowca", OtherKey="IdTypuSurowca")]
		public EntitySet<Log_Surowca> Log_Surowcas
		{
			get
			{
				return this._Log_Surowcas;
			}
			set
			{
				this._Log_Surowcas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zbudowany_Zs(Zbudowany_Z entity)
		{
			this.SendPropertyChanging();
			entity.Surowiec = this;
		}
		
		private void detach_Zbudowany_Zs(Zbudowany_Z entity)
		{
			this.SendPropertyChanging();
			entity.Surowiec = null;
		}
		
		private void attach_Log_Surowcas(Log_Surowca entity)
		{
			this.SendPropertyChanging();
			entity.Surowiec = this;
		}
		
		private void detach_Log_Surowcas(Log_Surowca entity)
		{
			this.SendPropertyChanging();
			entity.Surowiec = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Typ Budynku]")]
	public partial class Typ_Budynku : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTypuBudynku;
		
		private string _Nazwa;
		
		private int _MaksymalnyPoziomRozwoju;
		
		private double _ZasiegAtaku;
		
		private double _SzybkoscAtaku;
		
		private EntitySet<Budynek> _Budyneks;
		
		private EntitySet<Zbudowany_Z> _Zbudowany_Zs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTypuBudynkuChanging(int value);
    partial void OnIdTypuBudynkuChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnMaksymalnyPoziomRozwojuChanging(int value);
    partial void OnMaksymalnyPoziomRozwojuChanged();
    partial void OnZasiegAtakuChanging(double value);
    partial void OnZasiegAtakuChanged();
    partial void OnSzybkoscAtakuChanging(double value);
    partial void OnSzybkoscAtakuChanged();
    #endregion
		
		public Typ_Budynku()
		{
			this._Budyneks = new EntitySet<Budynek>(new Action<Budynek>(this.attach_Budyneks), new Action<Budynek>(this.detach_Budyneks));
			this._Zbudowany_Zs = new EntitySet<Zbudowany_Z>(new Action<Zbudowany_Z>(this.attach_Zbudowany_Zs), new Action<Zbudowany_Z>(this.detach_Zbudowany_Zs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypuBudynku", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTypuBudynku
		{
			get
			{
				return this._IdTypuBudynku;
			}
			set
			{
				if ((this._IdTypuBudynku != value))
				{
					this.OnIdTypuBudynkuChanging(value);
					this.SendPropertyChanging();
					this._IdTypuBudynku = value;
					this.SendPropertyChanged("IdTypuBudynku");
					this.OnIdTypuBudynkuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaksymalnyPoziomRozwoju", DbType="Int NOT NULL")]
		public int MaksymalnyPoziomRozwoju
		{
			get
			{
				return this._MaksymalnyPoziomRozwoju;
			}
			set
			{
				if ((this._MaksymalnyPoziomRozwoju != value))
				{
					this.OnMaksymalnyPoziomRozwojuChanging(value);
					this.SendPropertyChanging();
					this._MaksymalnyPoziomRozwoju = value;
					this.SendPropertyChanged("MaksymalnyPoziomRozwoju");
					this.OnMaksymalnyPoziomRozwojuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZasiegAtaku", DbType="Float NOT NULL")]
		public double ZasiegAtaku
		{
			get
			{
				return this._ZasiegAtaku;
			}
			set
			{
				if ((this._ZasiegAtaku != value))
				{
					this.OnZasiegAtakuChanging(value);
					this.SendPropertyChanging();
					this._ZasiegAtaku = value;
					this.SendPropertyChanged("ZasiegAtaku");
					this.OnZasiegAtakuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SzybkoscAtaku", DbType="Float NOT NULL")]
		public double SzybkoscAtaku
		{
			get
			{
				return this._SzybkoscAtaku;
			}
			set
			{
				if ((this._SzybkoscAtaku != value))
				{
					this.OnSzybkoscAtakuChanging(value);
					this.SendPropertyChanging();
					this._SzybkoscAtaku = value;
					this.SendPropertyChanged("SzybkoscAtaku");
					this.OnSzybkoscAtakuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typ_Budynku_Budynek", Storage="_Budyneks", ThisKey="IdTypuBudynku", OtherKey="IdTypuBudynku")]
		public EntitySet<Budynek> Budyneks
		{
			get
			{
				return this._Budyneks;
			}
			set
			{
				this._Budyneks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typ_Budynku_Zbudowany_Z", Storage="_Zbudowany_Zs", ThisKey="IdTypuBudynku", OtherKey="IdTypuBudynku")]
		public EntitySet<Zbudowany_Z> Zbudowany_Zs
		{
			get
			{
				return this._Zbudowany_Zs;
			}
			set
			{
				this._Zbudowany_Zs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Budyneks(Budynek entity)
		{
			this.SendPropertyChanging();
			entity.Typ_Budynku = this;
		}
		
		private void detach_Budyneks(Budynek entity)
		{
			this.SendPropertyChanging();
			entity.Typ_Budynku = null;
		}
		
		private void attach_Zbudowany_Zs(Zbudowany_Z entity)
		{
			this.SendPropertyChanging();
			entity.Typ_Budynku = this;
		}
		
		private void detach_Zbudowany_Zs(Zbudowany_Z entity)
		{
			this.SendPropertyChanging();
			entity.Typ_Budynku = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Typ Przeciwnika]")]
	public partial class Typ_Przeciwnika : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTypuPrzeciwnika;
		
		private string _Nazwa;
		
		private byte _Pancerz;
		
		private byte _SzybkoscRuchu;
		
		private EntitySet<Sklad_Fali> _Sklad_Falis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTypuPrzeciwnikaChanging(int value);
    partial void OnIdTypuPrzeciwnikaChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    partial void OnPancerzChanging(byte value);
    partial void OnPancerzChanged();
    partial void OnSzybkoscRuchuChanging(byte value);
    partial void OnSzybkoscRuchuChanged();
    #endregion
		
		public Typ_Przeciwnika()
		{
			this._Sklad_Falis = new EntitySet<Sklad_Fali>(new Action<Sklad_Fali>(this.attach_Sklad_Falis), new Action<Sklad_Fali>(this.detach_Sklad_Falis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTypuPrzeciwnika", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTypuPrzeciwnika
		{
			get
			{
				return this._IdTypuPrzeciwnika;
			}
			set
			{
				if ((this._IdTypuPrzeciwnika != value))
				{
					this.OnIdTypuPrzeciwnikaChanging(value);
					this.SendPropertyChanging();
					this._IdTypuPrzeciwnika = value;
					this.SendPropertyChanged("IdTypuPrzeciwnika");
					this.OnIdTypuPrzeciwnikaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Nazwa
		{
			get
			{
				return this._Nazwa;
			}
			set
			{
				if ((this._Nazwa != value))
				{
					this.OnNazwaChanging(value);
					this.SendPropertyChanging();
					this._Nazwa = value;
					this.SendPropertyChanged("Nazwa");
					this.OnNazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pancerz", DbType="TinyInt NOT NULL")]
		public byte Pancerz
		{
			get
			{
				return this._Pancerz;
			}
			set
			{
				if ((this._Pancerz != value))
				{
					this.OnPancerzChanging(value);
					this.SendPropertyChanging();
					this._Pancerz = value;
					this.SendPropertyChanged("Pancerz");
					this.OnPancerzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SzybkoscRuchu", DbType="TinyInt NOT NULL")]
		public byte SzybkoscRuchu
		{
			get
			{
				return this._SzybkoscRuchu;
			}
			set
			{
				if ((this._SzybkoscRuchu != value))
				{
					this.OnSzybkoscRuchuChanging(value);
					this.SendPropertyChanging();
					this._SzybkoscRuchu = value;
					this.SendPropertyChanged("SzybkoscRuchu");
					this.OnSzybkoscRuchuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Typ_Przeciwnika_Sklad_Fali", Storage="_Sklad_Falis", ThisKey="IdTypuPrzeciwnika", OtherKey="IdTypuPrzeciwnika")]
		public EntitySet<Sklad_Fali> Sklad_Falis
		{
			get
			{
				return this._Sklad_Falis;
			}
			set
			{
				this._Sklad_Falis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sklad_Falis(Sklad_Fali entity)
		{
			this.SendPropertyChanging();
			entity.Typ_Przeciwnika = this;
		}
		
		private void detach_Sklad_Falis(Sklad_Fali entity)
		{
			this.SendPropertyChanging();
			entity.Typ_Przeciwnika = null;
		}
	}
}
#pragma warning restore 1591
